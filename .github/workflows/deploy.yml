###############################################################
# GitHub Actions Workflow: CI/CD Pipeline for Portfolio Website #
#
# This workflow automates the build, test, security, and static analysis
# for the portfolio website. It runs on every push and pull request to main.
# Each job is explained in detail below.
###############################################################

# Name of the workflow as shown in GitHub Actions UI
name: CI/CD Pipeline

# Workflow triggers: runs on push and pull requests to main branch
on:
  push:
    branches:
      - main # Only run on pushes to main
      - deploy
  pull_request:
    branches:
      - main # Only run on PRs targeting main

# Jobs section: defines all the jobs in the workflow
jobs:
  build:
    # Build job: checks out code and validates HTML files
    runs-on: ubuntu-latest # Use latest Ubuntu runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # Checks out repository code

      - name: Validate HTML
        run: |
          # Install tidy for HTML validation
          sudo apt-get update
          sudo apt-get install -y tidy
          # Validate all HTML files, report errors but do not fail build
          tidy -q -e index.html about.html projects.html experience.html education.html || true

  test:
    # Test job: runs after build, checks for broken links using Lychee
    runs-on: ubuntu-latest
    needs: build # Depends on build job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # Checks out repository code

      - name: Run Lychee
        uses: lycheeverse/lychee-action@v2 # Lychee checks for broken links
        with:
          args: --verbose . --exclude https://linkedin.com/in/v-s-v-i-s-h-w-a-s

  security:
    # Security job: runs after tests, scans for secrets using TruffleHog
    runs-on: ubuntu-latest
    needs: test # Depends on test job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # Checks out repository code

      - name: Secret Scan
        uses: trufflesecurity/trufflehog@v3.63.3 # Scans for secrets in codebase
        with:
          path: . # Scan entire repo
          base: main # Compare against main branch

  static-analysis:
    # Static analysis job: runs after security, lints CSS/JS and uploads reports
    runs-on: ubuntu-latest
    needs: security # Depends on security job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # Checks out repository code

      - name: Lint CSS
        run: |
          # Install Stylelint and config for CSS linting
          npm install -g stylelint stylelint-config-standard
          # Lint all CSS files, do not fail build on errors
          npx stylelint "**/*.css" || true

      - name: Lint JS
        run: |
          # Ensure Node.js and npm are installed
          sudo apt-get install -y node.js npm
          # Install JSHint for JS linting
          npm install -g jshint
          # Lint all JS files, do not fail build on errors
          jshint "**/*.js" || true

      - name: Create reports directory
        run: |
          # Create a directory for build and lint reports
          mkdir -p reports
          echo "Build completed successfully" > reports/build.txt
          echo "Linting completed successfully" > reports/lint.txt

      - name: Upload reports
        uses: actions/upload-artifact@v4 # Uploads build/lint reports as artifacts
        with:
          name: reports
          path: reports/

      - name: Upload GitHub Pages artifact
        uses: actions/upload-artifact@v4 # Uploads site files for deployment
        with:
          name: github-pages
          path: my-portfolio # Upload only the site files directory

  deploy:
    runs-on: ubuntu-latest
    needs: static-analysis
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
